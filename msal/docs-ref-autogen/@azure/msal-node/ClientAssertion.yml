### YamlMime:TSType
name: ClientAssertion
uid: '@azure/msal-node.ClientAssertion'
package: '@azure/msal-node'
summary: Client assertion of type jwt-bearer used in confidential client flows
fullName: ClientAssertion
remarks: ''
isDeprecated: false
type: class
methods:
  - name: fromAssertion(string)
    uid: '@azure/msal-node.ClientAssertion.fromAssertion'
    package: '@azure/msal-node'
    summary: >-
      Initialize the ClientAssertion class from the clientAssertion passed by
      the user
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function fromAssertion(assertion: string): ClientAssertion'
      parameters:
        - id: assertion
          type: string
          description: refer https://tools.ietf.org/html/rfc7521
      return:
        description: ''
        type: <xref uid="@azure/msal-node.ClientAssertion" />
  - name: fromCertificate(string, string, string)
    uid: '@azure/msal-node.ClientAssertion.fromCertificate'
    package: '@azure/msal-node'
    summary: ''
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      Use fromCertificateWithSha256Thumbprint instead, with a SHA-256 thumprint

      Initialize the ClientAssertion class from the certificate passed by the
      user
    syntax:
      content: >-
        static function fromCertificate(thumbprint: string, privateKey: string,
        publicCertificate?: string): ClientAssertion
      parameters:
        - id: thumbprint
          type: string
          description: identifier of a certificate
        - id: privateKey
          type: string
          description: secret key
        - id: publicCertificate
          type: string
          description: >-
            electronic document provided to prove the ownership of the public
            key
      return:
        description: ''
        type: <xref uid="@azure/msal-node.ClientAssertion" />
  - name: fromCertificateWithSha256Thumbprint(string, string, string)
    uid: '@azure/msal-node.ClientAssertion.fromCertificateWithSha256Thumbprint'
    package: '@azure/msal-node'
    summary: >-
      Initialize the ClientAssertion class from the certificate passed by the
      user
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function fromCertificateWithSha256Thumbprint(thumbprint: string,
        privateKey: string, publicCertificate?: string): ClientAssertion
      parameters:
        - id: thumbprint
          type: string
          description: identifier of a certificate
        - id: privateKey
          type: string
          description: secret key
        - id: publicCertificate
          type: string
          description: >-
            electronic document provided to prove the ownership of the public
            key
      return:
        description: ''
        type: <xref uid="@azure/msal-node.ClientAssertion" />
  - name: getJwt(CryptoProvider, string, string)
    uid: '@azure/msal-node.ClientAssertion.getJwt'
    package: '@azure/msal-node'
    summary: >-
      Update JWT for certificate based clientAssertion, if passed by the user,
      uses it as is
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getJwt(cryptoProvider: CryptoProvider, issuer: string,
        jwtAudience: string): string
      parameters:
        - id: cryptoProvider
          type: <xref uid="@azure/msal-node.CryptoProvider" />
          description: library's crypto helper
        - id: issuer
          type: string
          description: iss claim
        - id: jwtAudience
          type: string
          description: aud claim
      return:
        description: ''
        type: string
  - name: parseCertificate(string)
    uid: '@azure/msal-node.ClientAssertion.parseCertificate'
    package: '@azure/msal-node'
    summary: >-
      Extracts the raw certs from a given certificate string and returns them in
      an array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function parseCertificate(publicCertificate: string): string[]'
      parameters:
        - id: publicCertificate
          type: string
          description: >-
            electronic document provided to prove the ownership of the public
            key
      return:
        description: ''
        type: string[]
