### YamlMime:TSType
name: ResetPasswordError
uid: '@azure/msal-browser.ResetPasswordError'
package: '@azure/msal-browser'
summary: ''
fullName: ResetPasswordError
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ResetPasswordError(CustomAuthError)
    uid: '@azure/msal-browser.ResetPasswordError.constructor'
    package: '@azure/msal-browser'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ResetPasswordError(errorData: CustomAuthError)'
      parameters:
        - id: errorData
          type: <xref uid="@azure/msal-browser.CustomAuthError" />
          description: ''
inheritedProperties:
  - name: errorData
    uid: '@azure/msal-browser.ResetPasswordError.errorData'
    package: '@azure/msal-browser'
    summary: ''
    fullName: errorData
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'errorData: CustomAuthError'
      return:
        description: ''
        type: <xref uid="@azure/msal-browser.CustomAuthError" />
    inheritanceDescription: <b>Inherited From</b> AuthActionErrorBase.errorData
inheritedMethods:
  - name: isTokenExpired()
    uid: '@azure/msal-browser.ResetPasswordError.isTokenExpired'
    package: '@azure/msal-browser'
    summary: Checks if the error is due to the expired continuation token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isTokenExpired(): boolean'
      return:
        description: >-
          True if the error is due to the expired continuation token, false
          otherwise.
        type: boolean
    inheritanceDescription: <b>Inherited From</b> AuthActionErrorBase.isTokenExpired
methods:
  - name: isInvalidUsername()
    uid: '@azure/msal-browser.ResetPasswordError.isInvalidUsername'
    package: '@azure/msal-browser'
    summary: Checks if the error is due to the username being invalid.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isInvalidUsername(): boolean'
      return:
        description: >-
          true if the error is due to the username being invalid, false
          otherwise.
        type: boolean
  - name: isRedirectRequired()
    uid: '@azure/msal-browser.ResetPasswordError.isRedirectRequired'
    package: '@azure/msal-browser'
    summary: Check if client app supports the challenge type configured in Entra.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isRedirectRequired(): boolean'
      return:
        description: >-
          True if client app doesn't support the challenge type configured in
          Entra, "loginPopup" function is required to continue the operation.
        type: boolean
  - name: isUnsupportedChallengeType()
    uid: '@azure/msal-browser.ResetPasswordError.isUnsupportedChallengeType'
    package: '@azure/msal-browser'
    summary: >-
      Checks if the error is due to the provided challenge type is not
      supported.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isUnsupportedChallengeType(): boolean'
      return:
        description: >-
          True if the error is due to the provided challenge type is not
          supported, false otherwise.
        type: boolean
  - name: isUserNotFound()
    uid: '@azure/msal-browser.ResetPasswordError.isUserNotFound'
    package: '@azure/msal-browser'
    summary: Checks if the error is due to the user not being found.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isUserNotFound(): boolean'
      return:
        description: true if the error is due to the user not being found, false otherwise.
        type: boolean
extends: AuthActionErrorBase
